{"version":3,"sources":["BooksAPI.js","ChangeShelf.js","Book.js","BookShelf.js","BookList.js","ReturnedBooks.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","ShelfChanger","_this$props","this","props","changeShelf","currentShelf","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","react_default","a","createElement","className","onChange","event","target","defaultValue","disabled","Component","Book","state","expanded","truncated","lines","setState","_this2","prevState","_this3","_this$state","rating","averageRating","Table_default","striped","bordered","hover","style","backgroundImage","imageLinks","thumbnail","ChangeShelf","title","subtitle","authors","map","author","index","key","Truncate","ellipsis","href","onClick","toggleLines","onTruncate","handleTruncate","description","pageCount","publishedDate","BookShelf","src_Book","BookList","shelfChange","shelfBooks","filter","src_BookShelf","ReturnedBooks","Search","filteredBooks","searchResults","getBooks","_this","BooksAPI","length","sort","sortBy","es","to","type","placeholder","src_ReturnedBooks","BooksApp","newBook","newShelf","response","updatedBooks","push","path","render","_ref","history","src_Search","exact","src_BookList","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.12f4b84b.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token\n};\n\nexport const get = bookId =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ query, maxResults })\n  })\n    .then(res => res.json())\n    .then(data => data.books);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nclass ShelfChanger extends Component {\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired,\n  }\n\n  render() {\n    const { book, books, changeShelf } = this.props\n\n    let currentShelf = 'moveTo'\n\n    for (let shelf of books ) {\n      if (shelf.id === book.id)  {\n          currentShelf = shelf.shelf\n      }\n    }\n\n    return (\n      <div className=\"book-shelf-changer\">\n        <select  onChange={(event) => changeShelf(book, event.target.value)}\n          defaultValue={ currentShelf }>\n          <option value=\"moveTo\" disabled>Move to...</option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    )\n  }\n\n}\n\nexport default ShelfChanger\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport ShelfChanger from './ChangeShelf'\nimport Table from 'react-bootstrap/lib/Table';\nimport Truncate from 'react-truncate';\n\nclass Book extends Component {\n\n  state = {\n    expanded: false,\n    truncated: false,\n    lines: 10\n  }\n\n  handleTruncate(truncated) {\n    if (this.state.truncated !== truncated) {\n      this.setState({truncated});\n    }\n  }\n\n  toggleLines(event) {\n    this.setState((prevState) => ({\n      expanded: !this.state.expanded\n    }));\n  }\n\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  }\n\n  render() {\n    const {book, books, changeShelf, lines} = this.props\n    const {expanded, truncated} = this.state;\n\n    const rating = book.averageRating ? book.averageRating : \"none\"\n\n    return (\n      <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"book-header\">Book</th>\n          <th className=\"book-header\">Author</th>\n          <th className=\"book-header\">Description</th>\n          <th className=\"book-header\">Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>\n            <li>\n              <div className=\"BookShelfTable\">\n                <div className=\"book-top\">\n                  <div className=\"book-cover\" style={{\n                      backgroundImage: `url(${book.imageLinks.thumbnail})`\n                    }}></div>\n                  <ShelfChanger\n                    book={book}\n                    books={books}\n                    changeShelf={changeShelf}/>\n                </div>\n                <div>\n                  <h4>{book.title}</h4>\n                  <h6>{book.subtitle}</h6>\n                </div>\n              </div>\n            </li>\n          </td>\n          <td className=\"BookAuthor\">\n            {\n              book.authors && book.authors.map((author, index) => (\n                <div key={index}>{author}</div>\n            ))\n            }\n\n          </td>\n          <td className=\"BookDescription\">\n            <Truncate lines={!expanded && lines} ellipsis={(<span>...\n                <a href='#' onClick={() => this.toggleLines()}>More</a>\n              </span>)} onTruncate={() => this.handleTruncate()}>\n              {book.description}\n            </Truncate>\n            {\n              !truncated && expanded && (<span>\n                <a href='#' onClick={() => this.toggleLines()}>Less</a>\n              </span>)\n            }\n          </td>\n          <td className=\"book\">\n            <p> <b> Average Rating:</b> {rating} </p>\n            <p> <b> Page Count:</b> {book.pageCount} </p>\n            <p> <b> Publish Date:</b> {book.publishedDate} </p>\n          </td>\n        </tr>\n      </tbody>\n    </Table>)\n  }\n}\n\nexport default Book\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport Book from './Book'\n\nclass BookShelf extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { books, changeShelf } = this.props\n\n    return (\n      <ol className=\"books-grid\">\n        {books.map((book) => (\n          //console.log(book)\n          <Book\n            book={ book }\n            books={ books }\n            key={ book.id }\n            changeShelf={ changeShelf }\n          />\n        ))}\n      </ol>\n    )\n  }\n\n}\n\nexport default BookShelf\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport BookShelf from './BookShelf'\n\nclass BookList extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  }\n\n  state = {\n    shelfChange: false\n  }\n\n  render() {\n    const {books, changeShelf} = this.props\n    const shelves = [\n      {\n        currentShelf: 'currentlyReading',\n        title: 'Currently Reading'\n      }, {\n        currentShelf: 'wantToRead',\n        title: 'Want to Read'\n      }, {\n        currentShelf: 'read',\n        title: 'Read'\n      }\n    ]\n\n    return (<div className=\"list-books-content\">\n      {\n        shelves.map((shelf, index) => {\n          const shelfBooks = books.filter(book => book.shelf === shelf.currentShelf)\n          return (<div className=\"bookshelf\" key={index}>\n            <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n            <div className=\"bookshelf-books\">\n              <BookShelf\n                books={shelfBooks}\n                changeShelf={changeShelf}\n              />\n            </div>\n          </div>)\n        })\n      }\n    </div>)\n  }\n}\n\nexport default BookList\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport ShelfChanger from './ChangeShelf'\n\n\nclass ReturnedBooks extends Component {\n\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { book, books, changeShelf } = this.props\n\n    return (\n          <li>\n            <div className=\"book\">\n              <div className=\"book-top\">\n                <div\n                  className=\"book-cover\"\n                  style={{ backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                </div>\n                <ShelfChanger\n                  book={ book }\n                  books={ books }\n                  changeShelf={changeShelf }\n                />\n              </div>\n              <div className=\"book-title\">{ book.title }</div>\n            </div>\n          </li>\n    )\n  }\n\n}\n\nexport default ReturnedBooks\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport ReturnedBooks from './ReturnedBooks'\nimport * as BooksAPI from './BooksAPI'\nimport sortBy from 'sort-by';\n\nclass Search extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  }\n\n  state = {\n    query: '',\n    filteredBooks: [],\n    searchResults: false\n  }\n\n  getBooks = (event) => {\n    const query = event.target.value\n    this.setState({ query: query })\n\n    if (query) {\n      BooksAPI.search(query).then((books) => {\n        books.length > 0 ?  this.setState({filteredBooks: books, searchResults: false }) : this.setState({ filteredBooks: [], searchResults: true })\n      })\n    } else {\n      this.setState({filteredBooks: [], searchResults: false })\n    }\n  }\n\n  render() {\n\n    const { query, filteredBooks, searchResults } = this.state\n    const { books, changeShelf } = this.props\n    filteredBooks.sort(sortBy('title'))\n      return (\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link className=\"close-search\"  to=\"/\">Close</Link>\n            <div className=\"search-books-input-wrapper\">\n              <input type=\"text\"\n                placeholder=\"Search by title or author\"\n                value={ query }\n                onChange={ this.getBooks } />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {(\n              <div>\n                <ol className=\"books-grid\">\n                  {filteredBooks.map((book) => (\n                    <ReturnedBooks\n                      book={ book }\n                      books={ books }\n                      key={ book.id }\n                      changeShelf={ changeShelf }\n                    />\n                  ))}\n                </ol>\n              </div>\n            )}\n            {(<h3 className=\"searchResults\">No results found!!</h3> )}\n          </div>\n        </div>\n      )}\n}\nexport default Search\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport BookList from './BookList'\nimport { Link } from 'react-router-dom'\nimport Search from './Search'\n\nclass BooksApp extends React.Component {\n  state = { books: [] }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({books})\n    })\n  }\n\n  changeShelf = ( newBook, newShelf ) => {\n    BooksAPI.update(newBook, newShelf).then(response =>{\n      newBook.shelf = newShelf\n      var updatedBooks = this.state.books.filter( book => book.id !== newBook.id )\n      updatedBooks.push(newBook);\n      this.setState({ books: updatedBooks })\n    })\n  }\n\n  render() {\n    const { books } = this.state\n\n    return (\n      <div className=\"app\">\n        <Route path=\"/search\" render={( { history }) => (\n          <Search\n            books={ books }\n            changeShelf={ this.changeShelf }\n          />\n        )} />\n        <Route exact  path=\"/\" render={() => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>BookReads</h1>\n            </div>\n            <BookList\n              books={ books }\n              changeShelf={ this.changeShelf }\n            />\n            <div className=\"open-search\">\n              <Link to=\"/search\">Search</Link>\n            </div>\n          </div>\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}